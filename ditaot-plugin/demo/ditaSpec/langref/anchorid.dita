<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2009, v.4002-->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<?Pub Sty _display FontColor="red"?>
<reference id="anchorid" xml:lang="en-us">
<title>anchorid</title>
<shortdesc>The &lt;<keyword>anchorid</keyword>> element allows an
author to define a conref target that will be resolved dynamically
when rendered for an end user of the content. This element is useful
when doing an initial process of the DITA content prior to final rendering
of the content; it causes specified IDs to be preserved after that
process, and conref relationships that reuse the element will not
be resolved during the initial process.</shortdesc>
<prolog><metadata>
<keywords><indexterm>anchorid</indexterm></keywords>
</metadata></prolog>
<refbody>
<section><p>When the anchorid element is defined within a topic prolog,
the specified IDs will be found within that topic. When an anchorid
element is defined within a topicref element, the specified IDs will
be found within the referenced topic (if the topicref points to a
collection of topics, such as a reference that uses only a file name,
the IDs will be found within the first or root topic).</p><p>The only
difference between specifying an anchorid in the prolog and in topicmeta
is that from the map it is possible to export the ID of the entire
referenced topic. If <codeph>&lt;anchorid id="zero"/></codeph> is
specified in the topicmeta, and the referenced topic has an id of
"zero", this means that the anchorid is a reference to the entire
topic. If the topic id is not "zero", then the anchorid is a reference
to the element with id="zero" within that topic.</p><p>Along with
the preservation of the element's ID, any conref attribute that references
the element's ID will not be resolved during an initial process. In
that case, the conref will be resolved during a later rendering process.</p><p>This
description does not imply that IDs are not discarded when anchorid
is not used; though this element requires that IDs be preserved in
some manner, it is also common for IDs to be preserved when anchorid
is not used. Thus the primary impact of the anchorid element is on
conref resolution.</p><p
conref="exportanchors.dita#exportanchors/disclaimer"></p></section>
<section><title>Why not use topicid/elementid?</title><p>This element
differs from normal DITA referencing syntax in that it may reference
an element within a topic without using the topic's ID. There are
two reasons for this. First, the anchorid element may only be defined
in a situation that refers unambiguously to a single topic (in the
prolog, or in the topicmeta for a reference to a topic). Second, it
allows the anchorid to be combined with keyref values.</p><p>It is
possible to combine an anchor id with a key in order to delay resolution
of conref in the topic represented by that key (see the second set
of examples below). This would not be possible if the anchorid element
required both the topic id and the element id. That is, keyref allows
a modifiable reference to a topic, so a map may instruct processors
to delay conref for item step1 in the topic represented by the key
"commonconfig". If the anchorid element required a topic id, the delayed
conref would always be bound to that specific topic.</p></section>
<section
conref="../common/commonNavLibraryTable.dita#contentmodel-anchorid/contains"
id="contains" otherprops="contains"><title>Contains</title><p>The
content model of this element may differ based on where it is used.
Content model information is located here: <xref
keyref="anchorid-contains"></xref></p></section>
<section
conref="../common/commonNavLibraryTable.dita#contentmodel-anchorid/containedby"
id="containedby" otherprops="containedby"><title>Contained By</title><p>The
parents of this element may differ based on where it is used. Content
model information is located here: <xref keyref="anchorid-contained-by"></xref></p></section>
<section id="inheritance" otherprops="inheritance"><title>Inheritance</title><p>+
topic/keyword delay-d/anchorid </p></section>
<example id="example"><title>Example</title><fig><title>Use case 1:
Runtime resolution of conref to an id, determined by original author</title>
<ol>
<li>Author 1 creates topics for information component A, which is
a common component used by many products. The configuration task for
component A is often reused in whole or in part, so the author assigns
ids to each of the steps in the procedure and exports them. <codeblock>&lt;task id="configA">
  &lt;title>ABC&lt;title>
  &lt;shortdesc>...&lt;/shortdesc>
  &lt;prolog>&lt;metadata>
    &lt;exportanchors>
      &lt;anchorid id="step1"/>
      &lt;anchorid id="step2"/>
      &lt;anchorid id="step3"/>
    &lt;/exportanchors>
  &lt;/metadata>&lt;/prolog>
  &lt;taskbody>
    &lt;steps>
      &lt;step id="step1">&lt;cmd>Do this&lt;/cmd>&lt;/step>
      &lt;step id="step2">&lt;cmd>Do the other&lt;/cmd>&lt;/step>
      &lt;step id="step3">&lt;cmd>And then finish&lt;/cmd>&lt;/step>
    &lt;/steps>
  &lt;/taskbody>
&lt;/task></codeblock></li>
<li>Author 2 is working on information component B, which has information
component A as a prerequisite.</li>
<li>Author 2 creates a configuration task that reuses two steps from
the configuration task in information component A.<codeblock>&lt;task id="configB">
  &lt;title>..&lt;/title>
  &lt;shortdesc>..&lt;/shortdesc>
  &lt;taskbody>
    &lt;steps>
      &lt;step>&lt;cmd>Do the very first thing&lt;/cmd>&lt;/step>
      &lt;step conref="componentA/configA.dita#configA/step1">&lt;cmd/>&lt;/step>
      &lt;step>&lt;cmd>Do the middle thing&lt;/cmd>&lt;/step>
      &lt;step conref="componentA/configA.dita#configA/step2">&lt;cmd/>&lt;/step>
    &lt;/steps>
  &lt;/taskbody>
&lt;/task></codeblock></li>
<li>Author 2 builds the content for component B into a deliverable
format that supports dynamic content resolution. As with traditional
conref, the source for component A must be available during this process.
Because the ids in configA are exported, the build process knows to
preserve the reuse relationship rather than resolve it - so the conref
to the steps becomes an equivalent reuse artifact in that deliverable
format. This way the relationship to component A can be resolved at
runtime, and pick up the user's version of component A, which may
be more up-to-date than the one used by Author 2 when component B
was built.</li>
</ol>
</fig><fig><title>Use case 2: Runtime resolution to an id exported
by the information builder</title>
<ol>
<li>Author 1 is creating content that will be packaged into multiple
deliverable components. In one of those components, component A, the
ids should be exported for runtime reuse by other components. In other
components, the ids should not be exported because all reuse is local
(for example, the output is a single infocenter, or a helpset that
has only one component).</li>
<li>When author 1 builds component A, the author uses a map that exports
the ids, rather than exporting the ids from the topic prolog. <codeblock>&lt;map>
  &lt;topicref href="componentA/configA.dita">
    &lt;topicmeta>
      &lt;exportanchors>
        &lt;anchorid id="step1"/>
        &lt;anchorid id="step2"/>
        &lt;anchorid id="step3"/>
      &lt;/exportanchors>
    &lt;/topicmeta>
  &lt;/topicref>
&lt;/map></codeblock></li>
<li>The rest of the use case is the same as previous - the conref
is passed on to the runtime/display format to deal with, rather than
being resolved during native DITA processing.</li>
</ol>
</fig><fig><title>Delaying resolution for a topic</title>
<p>The ID on an &lt;anchorid> element is first compared with the topic's
id, and then with elements inside that topic. This results in the
following situation.</p>
<codeblock>&lt;map>
  &lt;topicref href="componentA/this.dita">
    &lt;topicmeta>
      &lt;exportanchors>
        &lt;anchorid id="this"/>
        &lt;anchorid id="that"/>
      &lt;/exportanchors>
    &lt;/topicmeta>
  &lt;/topicref>
&lt;/map>

&lt;topic id="this">
  &lt;title>This and that&lt;/title>
  &lt;shortdesc>Oh, you know, this and that.&lt;/shortdesc>
  &lt;body>
    &lt;fig id="that">&lt;p>more of that&lt;/p>&lt;/fig>
  &lt;/body>
&lt;/topic></codeblock>
<ul>
<li>The first ID to be exported is "this", which matches the topic
id, so resolution of conref values that target the topic should be
delayed.</li>
<li>The second value is "that", which matches a figure within the
topic, so resolution of conref values that target the figure should
be delayed.</li>
<li>Note that if the "this" is also used within the topic (which is
legal from a DITA perspective), it will not be possible to export
that id, because processors will match on the topic's id first.</li>
</ul>
</fig></example>
<example conref="anchorkey.dita#anchorkey/example"></example><?Pub
Caret -2?>
<section id="attributes"><title>Attributes</title><simpletable
id="attribute_table" relcolwidth="2* 3* 1* 1* 1*">
<sthead>
<stentry>Name</stentry>
<stentry>Description</stentry>
<stentry>Data Type</stentry>
<stentry>Default Value</stentry>
<stentry>Required?</stentry>
</sthead>
<strow conref="../common/commonLRdefs.dita#commonLRdefs/id-anchorid">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="../common/commonLRdefs.dita#commonLRdefs/keyref">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="../common/commonLRdefs.dita#commonLRdefs/conref-atts">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="../common/commonLRdefs.dita#commonLRdefs/select-atts">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow
conref="../common/commonLRdefs.dita#commonLRdefs/localization-atts">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="../common/commonLRdefs.dita#commonLRdefs/global-atts">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="../common/commonLRdefs.dita#commonLRdefs/classandout">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
</simpletable></section>
</refbody>
</reference>
<?Pub *0000010505?>
