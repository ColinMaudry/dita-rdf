<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="ditamap-elements" xml:lang="en-us"><title><ph>DITA map
      elements</ph></title>
  <abstract>
    <shortdesc>A DITA map describes the relationships among a set of DITA topics. The
      DITA map and map group elements organize topics into hierarchies, groups, and relationships;
      they also define keys.</shortdesc>
  </abstract>
  <conbody><section>
      <title><ph>Map and map group elements</ph></title>
      <p>A DITA map is composed of the following elements:<dl>
          <dlentry>
            <dt>map</dt>
            <dd>The &lt;map> element is the root element of the DITA map.</dd>
          </dlentry>
          <dlentry>
            <dt>topicref</dt>
            <dd>
              <p>The &lt;topicref> elements are the basic elements of a map. A &lt;topicref> element
                can reference a DITA topic, a DITA map, <ph>or any non-DITA
                  resource</ph>. A &lt;topicref> element also can have a title, short description,
                and the same kind of prolog-level metadata that is <ph>available in
                  topics</ph>. </p>
              <p>The &lt;topicref> elements can be nested to create a hierarchy, which can be used
                to define a table of contents (TOC) for print output, online navigation, and
                parent/child links. Hierarchies can be annotated using the @collection-type
                attribute to define a particular type of relationship, such as a set of choices, a
                sequence, or a family. These collection types can affect link generation, and they
                  <term>may</term> be interpreted differently for different outputs.</p>
            </dd>
          </dlentry>
          <dlentry>
            <dt>reltable</dt>
            <dd>
              <p>Relationship tables are defined with the &lt;reltable> element.
                Relationship tables can be used to define relationships between DITA topics or
                between DITA topics and non-DITA resources. In a relationship table, the columns
                define common attributes, metadata, or information type <ph>(for
                  example, task or troubleshooting)</ph> for the resources referenced in that
                column. The rows define relationships between the resources referenced in different
                cells of the same row.</p>
              <p>The &lt;relrow>, &lt;relcell>, &lt;relheader>, and &lt;relcolspec>
                elements are used to define the components of the relationship table. Relationships
                defined in the relationship table also can be further refined by using the
                @collection-type attribute.</p>
              <!--<draft-comment author="Kristen James Eberlein" time="6 July 2009">Here
is the text that Elliot Kimber suggested in the first review:<p>A
relationship table defines a set of relationships of a specific type
among sets of topics or non-DITA resources. Each column in the table
represents a specific role within the relationship type (e.g., "concept",
"reference", and task columns in a table that establishes "related
information" relationships") and defines common metadata for all topicrefs
within the column. Each row of the table represents an instance of
the relationship and each cell of the row contains topicrefs to the
topics that play that column's row in the relationship instance.</p></draft-comment><draft-comment
author="Kristen James Eberlein" time="29 August 2009">Here is an additional
Wiki comment from Elliot:<p>"My primary intent was to make explicit
that each row is a typed relationship and each column represents a
distinct role in that relationship. Your rewrite loses the type and
role aspect. That is, the cascade of attribute values from columns
to cell members is useful but not the most important aspect of rel
tables. What is most important is that each column is a specific role.
It happens that the current main use of reltables is to represent
a fair weak "related info" relationship where the roles happen to
correspond to topic types. But topic type is not the only or necessarily
most interesting sort of role. For example, in a training context
I might have a relationship type "associated regulation" with roles
"regulation" and "instruction" that serve to bind specific regulations
to specific instruction topics or map trees."</p></draft-comment>-->
              <!--<draft-comment author="Kristen James Eberlein" time="17 September 2009">Elliot,
can you suggest an example to illustrate the point that you want to
make?</draft-comment>-->
            </dd>
          </dlentry>
          <dlentry>
            <dt>topicgroup</dt>
            <dd>The &lt;topicgroup> element defines a group or collection outside of a
              hierarchy or relationship table. It is <ph>a convenience element that is
              </ph>equivalent to a &lt;topicref> element with no @href attribute or <ph >navigation title</ph>. Groups can be combined with hierarchies and relationship
              tables, for example, by including a &lt;topicgroup> element within a set of siblings
              in a hierarchy or within a table cell. The &lt;topicref> elements so grouped can then
              share inherited attributes and linking relationships with no effect on the navigation
              or table of contents.</dd>
          </dlentry>
          <dlentry>
            <dt>topicmeta</dt>
            <dd>Most map-level elements, including the map itself, can contain metadata inside the
              &lt;topicmeta> element. Metadata typically is applied to the element and its
              descendants.</dd>
          </dlentry>
          <dlentry>
            <dt>topichead</dt>
            <dd>The &lt;topichead> element provides a navigation title; it is <ph>an
                convenience element that is</ph> equivalent to a &lt;topicref> element with a
              navigation title but no <ph>@href attribute</ph>.</dd>
          </dlentry>
          <dlentry>
            <dt>anchor</dt>
            <dd><ph conref="../common/conref_file.dita#reuse_file/anchor_shortdesc"/></dd>
          </dlentry>
          <dlentry>
            <dt>navref</dt>
            <dd><ph conref="../common/conref_file.dita#reuse_file/navtitle_shortdesc"/></dd>
          </dlentry>
          <dlentry>
            <dt>keydef</dt>
            <dd>Enables authors to define keys. <ph>This element is a convenience
                element; it is a specialization of &lt;topicref> that sets the default value of the
                @processing-role attribute to resource-only. Setting the @processing-role attribute
                to resource-only ensures that the resource <ph id="1.2.3">referenced</ph> by the key
                definition is not directly included in the navigation that is defined by the map
                that includes the key definition.</ph></dd>
          </dlentry>
          <dlentry>
            <dt>mapref</dt>
            <dd>Enables authors to <ph>reference</ph> an entire DITA map, including
              hierarchy and relationship tables. <ph>This element is a convenience
                element; it is a specialization of &lt;topicref> that sets the default value of the
                @format attribute to ditamap. The &lt;mapref> element represents a reference from a
                parent map to a subordinate map.</ph></dd>
          </dlentry>
          <dlentry>
            <dt>topicset</dt>
            <dd>Enables authors to define a branch of navigation in a DITA map so that it can be <ph>referenced from</ph> another DITA map.</dd>
          </dlentry>
          <dlentry>
            <dt>topicsetref</dt>
            <dd>Enables authors to <ph>reference</ph> a navigation branch that is
              defined in another DITA map.</dd>
          </dlentry>
          <dlentry>
            <dt>anchorref</dt>
            <dd>Enables authors to define a map fragment that is pushed to the location defined by
              an anchor.</dd>
          </dlentry>
        </dl><!--<draft-comment author="Kristen James Eberlein" time="16 June 2009">Do
we need to provide examples of how the new-for-1.2 elements are used?
Similar to extant example of how a relationship table generates links?</draft-comment>--></p>
    </section>
    <example>
      <title>Example of a simple map with a relationship table</title>
      <!--<draft-comment author="Kristen James Eberlein" time="21 April 2009">This
section contains content untouched from the 1.1 arch spec. Is this
example helpful and appropriate? The reltable topic in the lang spec
1.2 contains a different and more developed example of a reltable,
using the bat topics. Do we want to ensure that we conref and use
the same material in both specifications?</draft-comment>-->
      <p>The following example contains the markup for a simple relationship table:</p>
      <codeblock>&lt;map>
...
&lt;reltable>
  &lt;relheader>
    &lt;relcolspec type="concept"/>
    &lt;relcolspec type="task"/>
    &lt;relcolspec type="reference"/>
  &lt;/relheader>
  &lt;relrow>
    &lt;relcell>
      &lt;topicref href="A.dita"/>
    &lt;/relcell>
    &lt;relcell>
      &lt;topicref href="B.dita"/>
    &lt;/relcell>
    &lt;relcell>
      &lt;topicref href="C1.dita"/>
      &lt;topicref href="C2.dita"/>
    &lt;/relcell>
  &lt;/relrow>
&lt;/reltable>
&lt;/map></codeblock>
      <p>A DITA-aware tool might represent the &lt;reltable> graphically:<simpletable>
          <sthead>
            <stentry>type="concept"</stentry>
            <stentry>type="task"</stentry>
            <stentry>type="reference"</stentry>
          </sthead>
          <strow>
            <stentry>A</stentry>
            <stentry>B</stentry>
            <stentry>
              <lines>C1
C2</lines>
            </stentry>
          </strow>
        </simpletable></p>
      <p>When the output is generated, the topics contain the following linkage:</p>
      <dl>
        <dlentry>
          <dt>A</dt>
          <dd>Links to B, C1, and C2</dd>
        </dlentry>
        <dlentry>
          <dt>B</dt>
          <dd>Links to A, C1, and C2</dd>
        </dlentry>
        <dlentry>
          <dt>C1, C2</dt>
          <dd>Links to A and B</dd>
        </dlentry>
      </dl>
    </example>
    <example>
      <title>Example of a simple map that defines keys</title>
      <p>The following example illustrates how keys can be defined:</p>
      <codeblock>&lt;map>
	&lt;keydef keys="dita-tc" href="dita_technical_committee.dita"/>
	&lt;keydef keys="dita-adoption" href="dita_adoption_technical_committee.dita"/>
	...
&lt;/map></codeblock>
      <p>The map also could be tagged in either of the following ways:</p>
      <dl>
        <dlentry>
          <dt>&lt;topicref> element with @processing-role attribute set to "resource-only"</dt>
          <dd>
            <codeblock>&lt;map>
	&lt;topicref keys="dita-tc" href="dita_technical_committee.dita" processing-role="resource-only"/>
	&lt;topicref keys="dita-adoption" href="dita_adoption_technical_committee.dita" processing-role="resource-only"/>
	...
&lt;/map></codeblock>
          </dd>
        </dlentry>
        <dlentry>
          <dt>&lt;topicref> element with @toc, @linking, and @search attributes set to "no"</dt>
          <dd>
            <codeblock>&lt;map>
	&lt;topicref keys="dita-tc" href="dita_technical_committee.dita" toc="no" linking="no" search="no"/>
	&lt;topicref keys="dita-adoption" href="dita_adoption_technical_committee.dita" toc="no" linking="no" search="no"/>
	...
&lt;/map></codeblock>
          </dd>
        </dlentry>
      </dl>
      <draft-comment author="Kristen James Eberlein" time="24 August 2009">Example added based on
        review #1 comment from Elliot Kimber. Exactly what do we want to communicate in this
          example?<ul>
          <li>Best practices for key definitions: Using a separate map, defining keys at beginning
            of map, etc.?</li>
          <li>First key encountered is used?</li>
          <li>That &lt;keydef> is equivalent to &lt;topicref processing-role="resource-only"> or
            setting @toc, @linking, and @search attributes to "no"?</li>
        </ul>Should the example include more information about why the keys are defined and how they
        would be resolved?</draft-comment>
    </example>
    <example>
      <title>Example of a simple map that references another map</title>
      <p>The following code sample illustrates how a DITA map can reference another DITA map:</p>
      <codeblock>&lt;map>
	&lt;title>DITA work at OASIS&lt;/title>
	&lt;topicref href="oasis-dita-technical-committees.dita>
		&lt;topicref href="dita_technical_committee.dita"/>
		&lt;topicref href="dita_adoption_technical_committee.dita/>
	&lt;/topicref>
&lt;mapref href"oasis-processes.ditamap"/>
...
&lt;/map></codeblock>
      <p>The map also could be tagged in the following way:</p>
      <codeblock>&lt;map>
	&lt;title>DITA work at OASIS&lt;/title>
	&lt;topicref href="oasis-dita-technical-committees.dita>
		&lt;topicref href="dita_technical_committee.dita"/>
		&lt;topicref href="dita_adoption_technical_committee.dita/>
	&lt;/topicref>
&lt;topicref href"oasis-processes.ditamap" format="ditamap/>
...
&lt;/map></codeblock>
      <p>With either of the above examples, during processing, the map is resolved in the following
        way:</p>
      <codeblock>&lt;map>
	&lt;title>DITA work at OASIS&lt;/title>
	&lt;topicref href="oasis-dita-technical-committees.dita>
		&lt;topicref href="dita_technical_committee.dita"/>
		&lt;topicref href="dita_adoption_technical_committee.dita/>
	&lt;/topicref>
&lt;-- Contents of the oasis-processes.ditamap file -->
&lt;topicref href"oasis-processes.dita>
	...
&lt;/topicref>
...
&lt;/map></codeblock>
    </example>
    <example>
      <title><ph><?Pub Caret?>Example of maps that use the &lt;anchor> element and the
          @anchorref attribute</ph></title>
      <p conref="../common/conref_file.dita#reuse_file/anchor"/>
      <p conref="../common/conref_file.dita#reuse_file/anchoref"/>
    </example>
  </conbody></concept>
<?Pub *0000012628?>
