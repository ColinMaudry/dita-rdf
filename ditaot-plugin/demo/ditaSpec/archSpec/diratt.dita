<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2009, v.4002-->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<?Pub Sty _display FontColor="red"?>
<!--[Hackos, 20 September 2009]
    * Recommend not use the @ sign as redundant with attribute
    * Corrected the en-US attribute in the source 
    [Hackos, 21 September 2009] Major modifications based on feedback from RRaya, Translation SC member
-->
<?Pub Caret -1?>
<!--[Eberlein, 19 September 2009]
    * Changed "dir attribute" to "@dir attribute"
    * Removed unnecessary @id attributes from element markup (visual clutter)
    * Removed element identifying Nancy Harrison as the author
    * Commented out two paragraphs in the "Implementation precautions" section
    * Drafted a new <shortdec>
    * Trying to get rid of all references to "directionality"; is this a valid phrase????
    * Edited "The @dir attribute" section-->
<reference id="diratt" xml:lang="en-US">
 <title>The dir attribute</title>
 <!--<shortdesc>While most languages are written in text where characters
        flow from left to right, some languages, including Hebrew and Arabic,
        are read from right to left. However, numbers and other content in
        these languages may be written left to right. Also, a multilingual
        document containing, for example, English and Hebrew, contains some
        text that flows left to right and other text that flows right to left. </shortdesc>-->
 <shortdesc>The dir attribute provides direction about how processors should render bidirectional
  text. Languages such as Arabic, Hebrew, Farsi, Urdu, and Yiddish have text written from right to
  left. Numerics and embedded sections of Western language text, however, are written from left to
  right. Some multilingual documents also contain a mixture of text segments in two directions. This
  attribute specifies how such text should be rendered to a reader.</shortdesc>
 <refbody>
  <section>
   <!--What editorial conventions should we use for attribute values? -->
   <!--Recommend no @ sign -->
   <p>Bidirectional text processing is controlled by several factors:<ul>
     <li>The xml:lang attribute may be used to identify text that requires bidirectional
      rendering. The Unicode Bidirectional algorithm provides the means to properly identify western
      content in mixed text.
      <!-- The dir attribute is either set on the root element "or determined by the
 Unicode directionality properties of the content" (Elliot's phrasing, which
 needs polishing; replaced "or, when not set, assumed by the processing
 application." ) --></li>
     <li>The dir attribute may be set on the root element,<ph> in combination with the
       xml:lang attribute</ph>. <ph>For example, to correctly set in a web browser a text
       in Arabic with embedded English content, the root element should be set with xml:lang="ar"
       and dir="rtl". All text, including punctuation marks, will be set correctly. </ph></li>
     <li>The dir attribute may be set to either "ltr" or "rtl" on an element in the
       document.<draft-comment>JTH: 21 Sept 2009; changed dir values to all uppercase to conform
       with the reference below.</draft-comment><draft-comment>RDA 29 Jan 2010: changed back to
       lower case to conform with the DTD (upper case values are invalid in DITA content). Also
       added quotes to further clarify that these are attribute
      values.</draft-comment><!-- [JTH: 21 September 2009] "The specified direction overrides the Unicode bidirectional algorithm 
 only on neutral Unicode characters (spaces, punctuation, and digits, 
 for example) in the content of the element. 
 When the @dir attribute is set to either "ltr" or "rtl", strongly typed 
 Unicode characters are not overridden." --></li>
     <li>The dir attribute may be set to either "lro" or "rlo" on an element in the document.
      <!-- [JTH:21 September 2009] see above. "The specified direction overrides the Unicode bidirectional
 algorithm on all Unicode characters in the content of the element." --></li>
    </ul></p>
   <p>The Unicode bidirectional algorithm positions the punctuation correctly for a given language.
    The rendering is responsible for displaying the text properly.
    <!-- Deleted: [JTH: 21 Sept 2009] "In most cases, authors need to set the dir attribute to ensure that punctuation that
 surrounds a right-to-left phrase inside a left-to-right element (or vice versa) is
 rendered correctly. To override the direction of strongly typed Unicode characters
 (most characters that apply to a language except for punctuation, spaces and
 digits), the author needs to set the dir attribute to either "lror" or "rlo"." --></p>
   <p>The use of the dir attribute and the Unicode algorithm is explained in the article <xref
     href="http://www.w3.org/TR/html4/struct/dirlang.html#adef-dir" scope="external" format="html"> Specifying the
     direction of text and tables: the dir attribute
     (http://www.w3.org/TR/html4/struct/dirlang.html#adef-dir) </xref>. This article contains
    several examples of how to use the dir attribute set to either left-to-right or right-to-left.
    There is no example of setting the dir attribute to either "lro" or "rlo", although it can be
    inferred from the example that uses the &lt;bdo> element, a now-deprecated W3C mechanism for
    overriding the entire Unicode bidirectional algorithm.</p>
   <p>Note that properly written mixed text does not need any special markers. The Unicode
    bidirectional algorithm is sufficient. However, some rendering systems may need directions for
    displaying bidirectional text, such as Arabic, properly. For example, the Apache FOP tool may
    not render Arabic properly unless the left-to-right and right-to-left indicators are used.</p>
  </section>
  <section>
   <title>Recommended usage</title>
   <p>The dir attribute, together with the xml:lang attribute, is essential for rendering table
    columns and definition lists &lt;dl> to ensure proper order.</p>
   <p>In general text, the Unicode Bidirectional algorithm, as specified by the xml:lang attribute
    together with the dir attribute, provides for various levels of bidirectionality, as follows:<ul
     id="ul_2e2dcdcf-9265-4f9e-b49b-a67af4e4a94c">
     <li rev="">Directionality is either explicitly specified <ph>via the xml:lang
       attribute in combination with the dir attribute</ph> on the highest level element (topic or
      derived peer for topics, map for ditamaps) or assumed by the processing application. If used,
      it is recommended to specify the dir attribute on the highest level element in the topic or
      document element of the map. </li>
     <li>When embedding a right-to-left text run inside a left-to-right text run (or vice-versa),
      the default direction <ph>may</ph> provide incorrect results based on the rendering
      mechanism, especially if the embedded text run includes punctuation that is located at one end
      of the embedded text run. Unicode defines spaces and punctuation as having neutral
      directionality and defines directionality for these neutral characters when they appear
      between characters having a strong directionality (most characters that are not spaces or
      punctuation). While the default direction is often sufficient to determine the correct
      directionality of the language, sometimes it renders the characters incorrectly (for example,
      a question mark at the end of a Hebrew question may appear at the beginning of the question
      instead of at the end or a parenthesis may render incorrectly). To control this behavior, the
      dir attribute is set to "ltr" or "rtl" as needed, to ensure that the desired direction is
      applied to the characters that have neutral bidirectionality. The "ltr" and "rtl" values
      override only the neutral characters (e.g. spaces and punctuation), not all Unicode
      characters. <note>Problems with Unicode rendering may be caused by the rendering mechanism.
       The problems are not due to the XML markup itself. </note></li>
     <li>Sometimes you may want to override the default directionality for strongly bidirectional
      characters. Overrides are done using the "lro" and "rlo" values, which overrides the Unicode
      Bidirectional algorithm. This override forces a direction on the contents of the element.
      These override attributes give the author a brute force way of setting the directionality
      independent of the Unicode Bidirectional algorithm. The gentler "ltr" and "rtl" values have a
      less radical effect, only affecting punctuation and other so-called neutral characters. </li>
    </ul></p>
   <p>For most authoring needs, the "ltr" and "rtl" values are sufficient. Only when the desired
    effect cannot be achieved using these values, should the override values be used. </p>
   <!-- [JTH: 21 Sept 2009] This comment appears to be seriously out of date.
                <p>While the Unicode standard includes hidden markers for directionality without the
                need for markup, these markers should not be used. It is strongly recommended to
                mark up the document using the dir attribute <ph>with the xml:lang
                attribute</ph> to set directionality. Using <ph>XML</ph> markup
                instead of the Unicode markers has the following advantages: <ul>
                <li>The document will be as portable as possible. </li>
                <li>The document can be processed by applications that do not fully implement
                the Unicode BIDI algorithm. </li>
                <li>The marked-up document can be read and understood by humans. </li>
                <li>When updating the document, the boundaries of each text flow are clear,
                which makes it much easier for the author to update the document. </li>
                </ul></p> -->
  </section>
  <section>
   <title>Implementation precautions</title>
   <!--<p>Users should be aware that descriptive markup isnâ•˙t necessarily
            the end of their work. Each possible output rendition or display tool
            may have different requirements for managing bidirectional text. Just
            as different HTML browsers offer different levels of support for CSS,
            different output tools implement the bidirectional algorithm, and
            its accompanying directional controls, differently. For example, HTML
            displayed in Internet Explorer may have different requirements than
            HTML displayed in Firefox. Similarly, a control that works in one
            part of an HTML file, such as the body of the page, might not work
            in another, such as the title or the index in compiled HTML Help.
            The same uncertainty can be found in almost any output. PostScript
            or PDF rendering tools treat bidirectional text differently. Microsoft
            Word and OpenOffice Writer donâ•˙t handle bidirectional RTF in the same
            way. Flash has little concern for directional markup of any kind,
            but does format strings according to the Unicode algorithm. </p><p>Because
            input is unpredictably dependent on eventual output, it is not sufficient
            to apply the â•˛dirâ•ˇ attribute in such a way as to make the XML appear
            as it should in an editor. Additional care must be taken to make sure
            that markup is correctly transformed (or added to the source XML,
            if needed), with respect both to the target output format and the
            target output tool. To use the case of HTML, this could mean creating
            output tailored to the capabilities of the most common likely browser
            or creating output tailored to the least capable browser and ensuring
            the markup functions for the most likely and capable one. For example,
            bidirectional HTML that displays perfectly in Internet Explorer might
            not display correctly in Safari. However, if the HTML displays perfectly
            in Safari, chances are very good it will display correctly in Internet
            Explorer as well. This isnâ•˙t a certainty, however. Each case should
            be tested and confirmed by qualified individuals. </p>-->
   <p>Applications that process DITA documents, whether at the authoring, translation, publishing,
    or any other stage, should fully support the Unicode bidirectional algorithm to correctly
    implement the script and directionality for each language used in the document.
    <!-- [JTH: 21 Sept 2009 This sentence is out of date and no longer applies. "The recommended practice is to write all directionality
 markers via XML markup and not to use the Unicode Bidirectional markers. When
 reading XML markup that embeds the Unicode Bidirectional markers, the author
 should be asked if these markers should be replaced with markup when the
 document is saved. --></p>
   <p>Applications should ensure every highest level topic element and the root map element
    explicitly assign the dir attribute, as well as the xml:lang attribute. </p>
  </section>
 </refbody>
 <related-links>
  <link format="html" href="http://www.w3.org/International/articles/inline-bidi-markup/"
   scope="external">
   <linktext>What you need to know about the BIDI algorithm and inline markup
    (http://www.w3.org/International/articles/inline-bidi-markup/)</linktext>
  </link>
  <link format="html" href="http://www.w3.org/TR/2004/WD-xhtml2-20040722/mod-bidi.html"
   scope="external">
   <linktext>XHTML Bi-directional Text Attribute Module
    (http://www.w3.org/TR/2004/WD-xhtml2-20040722/mod-bidi.html)</linktext>
  </link>
  <link format="html" href="http://www.w3.org/TR/html4/struct/dirlang.html#adef-dir"
   scope="external">
   <linktext>Specifying the direction of text and tables: the dir attribute
    (http://www.w3.org/TR/html4/struct/dirlang.html#adef-dir)</linktext>
  </link>
  <link format="html" href="http://www.htmlhelp.com/reference/html40/attrs.html" scope="external">
   <linktext>HTML 4.0 Common Attributes
    (http://www.htmlhelp.com/reference/html40/attrs.html)</linktext>
  </link>
 </related-links>
</reference>
<?Pub *0000015111?>
